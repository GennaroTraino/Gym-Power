CREATE OR REPLACE PROCEDURE ASSEGNA_SCHEDA
(
	CF 			ISCRITTO.CF_ISCRITTO%TYPE,	
	SCHEDA 		E_ASSEGNATA.N_SCHEDA_FK%TYPE,
	DATA_F 		E_ASSEGNATA.DATA_FINE%TYPE
)
IS

WARNING 	EXCEPTION;
CAMBIAMENTO EXCEPTION;
DATAENDOLD 	DATE;
OLDSCHEDA 	NUMBER;
LIV 		SCHEDA_ESERCIZI.LIVELLO%TYPE;
LIVNEW 		SCHEDA_ESERCIZI.LIVELLO%TYPE;

BEGIN
-- PRENDIAMO IL NUMERO DELLA SCHEDA PRECEDENTE E LA DATA DI SCADENZA

SELECT N_SCHEDA_FK,DATA_FINE INTO OLDSCHEDA,DATAENDOLD
FROM E_ASSEGNATA
WHERE CF_ISCRITTO_FK = CF 
	AND DATA_FINE = (SELECT MAX(DATA_FINE) FROM E_ASSEGNATA WHERE CF_ISCRITTO_FK = CF);

-- SE ANCORA DEVE SCADERA LANCIA WARNING CHE AGGIORNA LA DATA SCADENZA AD OGGI E AVVISA L'UTENTE
IF (DATAENDOLD > SYSDATE AND SCHEDA IS NOT NULL) THEN RAISE WARNING;
END IF;

-- SE NON E STATA INSERITA LA SCHEDA PROLUNGA LA VECCHIA
IF (SCHEDA IS NULL) THEN
	DBMS_OUTPUT.PUT_LINE('AGGIORNAMENTO DELLA SCHEDA');
	UPDATE E_ASSEGNATA SET DATA_FINE = DATA_F WHERE N_SCHEDA_FK = OLDSCHEDA; 
END IF;

-- RECUPERIAMO IL LIVELLO DELLA VECCHIA SCHEDA
SELECT LIVELLO INTO LIV
FROM SCHEDA_ESERCIZI
WHERE N_SCHEDA = OLDSCHEDA;

-- RECUPERIAMO IL LIVELLO DELLA NUOVA
SELECT LIVELLO INTO LIVNEW
FROM SCHEDA_ESERCIZI
WHERE N_SCHEDA = SCHEDA;


IF (LIV IS NOT NULL AND LIV <> LIVNEW) THEN RAISE CAMBIAMENTO;
END IF;

-- ASSEGNA LA NUOVA SCHEDA
INSERT INTO E_ASSEGNATA VALUES (CF,SCHEDA,SYSDATE,DATA_F);

EXCEPTION
WHEN WARNING THEN
	DBMS_OUTPUT.PUT_LINE('LA VECCHIA SCHEDA ASSEGNATA NON ERA ANCORA SCADUTA: SARA IMPOSTATA COME DATA DI SCADENZA OGGI' );
	UPDATE E_ASSEGNATA SET DATA_FINE = SYSDATE WHERE N_SCHEDA_FK = OLDSCHEDA;
WHEN CAMBIAMENTO THEN
		DBMS_OUTPUT.PUT_LINE('LA VECCHIA SCHEDA ASSEGNATA ERA DI LIVELLO ' || LIV || ' LA NUOVA DI LIVELLO ' || LIVNEW);
END ASSEGNA_SCHEDA;
/