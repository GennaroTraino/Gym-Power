CREATE OR REPLACE PROCEDURE ASSEGNA_CORSO
(
	CAP_IN  		CORSO.CAP_CORSO%TYPE,
	NOME_1  		CORSO.NOME_CORSO%TYPE,
	NOME_2          CORSO.NOME_CORSO%TYPE,
	CF_I     		ISCRITTO.CF_ISCRITTO%TYPE
)

IS 
CONTROLLO_NUMERO_CORSI 	NUMBER;
TROPPI 					EXCEPTION;
BADGEI 		ABBONAMENTO.BADGE%TYPE;

BEGIN

-- CONTIAMO IL NUMERO DI CORSI GIA PRESENTI NELL ABBONAMENTO 
SELECT COUNT(*) INTO CONTROLLO_NUMERO_CORSI
FROM PREVEDE JOIN ABBONAMENTO ON BADGE_FK = BADGE 
WHERE CF_ISCRITTO_ABBONAMENTO = CF_I;

-- SE HA GIA DUE CORSI LANCIA ERRORE
IF CONTROLLO_NUMERO_CORSI > 1
	THEN RAISE TROPPI;
END IF;

--RECUPERIAMO IL BADGE DELL'ISCRITTO
SELECT BADGE INTO BADGEI
FROM ABBONAMENTO
WHERE CF_ISCRITTO_ABBONAMENTO = CF_I
	AND DATA_SCADENZA = (SELECT MAX(DATA_SCADENZA) FROM ABBONAMENTO WHERE CF_ISCRITTO_ABBONAMENTO = CF_I);

--INSERISCI NELL'ABBONAMENTO
IF (NOME_1 IS NOT NULL) THEN 
	INSERT INTO PREVEDE VALUES(BADGEI,CAP_IN,NOME_1);
	DBMS_OUTPUT.PUT_LINE('PRIMO CORSO INSERITO');
	CONTROLLO_NUMERO_CORSI := CONTROLLO_NUMERO_CORSI + 1;
END IF;

-- RIESEGUI IL CONTROLLO
IF CONTROLLO_NUMERO_CORSI > 1
	THEN RAISE TROPPI;
END IF;

--INSERISCI IL SECONDO CORSO
IF (NOME_2 IS NOT NULL) THEN 
	INSERT INTO PREVEDE VALUES(BADGEI,CAP_IN,NOME_2);
	DBMS_OUTPUT.PUT_LINE('SECONDO CORSO INSERITO');
END IF;


EXCEPTION
WHEN NO_DATA_FOUND THEN 
	CONTROLLO_NUMERO_CORSI := 0;
WHEN TROPPI THEN
	RAISE_APPLICATION_ERROR(-20567,'NON PUOI ATTIVARE PIU DI DUE CORSI');


END ASSEGNA_CORSO;
/